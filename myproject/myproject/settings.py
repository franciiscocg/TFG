"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r7&7s2^0u_9dv2)50-_dsvjsi(4qmaoa(loksil(80ktc9v$t8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'myapp',
    'corsheaders',
    'archivos',
    'authentication',
    'anymail',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'django.contrib.sites',
    'dj_rest_auth',
    'rest_framework.authtoken', # Necesario para dj-rest-auth por defecto, aunque usemos JWT
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),  # Duración del access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # Duración del refresh token
    'ROTATE_REFRESH_TOKENS': False,                  # Rotar refresh tokens al refrescar
    'BLACKLIST_AFTER_ROTATION': False,               # Invalidar refresh tokens antiguos
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True  # Solo para desarrollo; ajusta en producción


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

ANYMAIL = {
    "MAILERSEND_API_TOKEN": "mlsn.09acea69f980d687e8e369146302a62217755b8063933e158f9050ccf84abd92",  # Tu clave API de MailerSend
    "MAILERSEND_SENDER_DOMAIN": "test-65qngkd9zdjlwr12.mlsender.net",  # Dominio predeterminado de MailerSend
}

# Configura el backend de correo
EMAIL_BACKEND = "anymail.backends.mailersend.EmailBackend"
DEFAULT_FROM_EMAIL = "noreply@test-65qngkd9zdjlwr12.mlsender.net"  # Usa el dominio predeterminado
SERVER_EMAIL = "noreply@test-65qngkd9zdjlwr12.mlsender.net"

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [ # Los permisos que solicitas
            'profile',
            'email',
            'https://www.googleapis.com/auth/calendar.events',
        ],
        'AUTH_PARAMS': {
            'access_type': 'offline', # ¡Importante para obtener refresh_token!
        },
        'OAUTH_PKCE_ENABLED': True, # Recomendado por seguridad
    }
}

# --- Configuraciones para dj-rest-auth ---
REST_AUTH = {
    'USE_JWT': True, # ¡Importante! Usa JWT
    'JWT_AUTH_HTTPONLY': True,  # Configura JWT para usar cookies HttpOnly (recomendado)
    'JWT_AUTH_COOKIE': 'my-app-auth', # Nombre de la cookie para el access token
    'JWT_AUTH_REFRESH_COOKIE': 'my-app-refresh-token', # Nombre de la cookie para el refresh token
    'JWT_AUTH_SAMESITE': 'Lax', # Política SameSite para las cookies (Lax o Strict)
    # 'USER_DETAILS_SERIALIZER': 'path.to.your.CustomUserDetailsSerializer', # Opcional: si quieres personalizar los datos del usuario devueltos
    # 'REGISTER_SERIALIZER': 'path.to.your.CustomRegisterSerializer', # Opcional: si usas dj_rest_auth.registration
    'SESSION_LOGIN': False, # Deshabilita el login de sesión de Django, confiaremos en JWT
}
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'none' # o 'optional'/'none' según tu flujo
ACCOUNT_AUTHENTICATION_METHOD = 'email' # o 'username' o 'username_email'
LOGIN_REDIRECT_URL = 'http://localhost:3000/' # A dónde redirigir después del login normal
SITE_ID = 1 
# Indicar a allauth que no use sus vistas de login/logout (las proveerá dj-rest-auth)
ACCOUNT_LOGOUT_ON_GET = False
SOCIALACCOUNT_LOGIN_ON_GET=True
SOCIALACCOUNT_AUTO_SIGNUP = True